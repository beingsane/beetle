#!/usr/bin/env bash

if [[ $# != 2 ]] ; then
    >&2 echo -e "Usage: $0 <action> <sourcecode-file>\nPrank Example: $0 sting controller.js\nFix Example: $0 cure controller.js"
    exit 1
fi

## Case in-sensitive comparison
shopt -s nocasematch


SPACE_CHAR=' '
INVISIBLE_CHAR='â€Œ '

## Validates the input
validate_input () {

    if [[ "$1" != "sting" ]] && [[ "$1" != "cure" ]] ; then
        >&2 echo -e "Invalid action \"$1\". Allowed actions are \"sting\" and \"cure\""
        exit 1
    fi

    if [[ ! -f "$2" ]] ; then    
        >&2 echo -e "File \"$2\" not found"
        exit 1
    fi
}

## Applies the sting on file i.e replaces the spaces
## available in file with invisible char
sting_file () {
    sed -i '' "s/$SPACE_CHAR/$INVISIBLE_CHAR/g" $1
}

## Fixes the file i.e. replaces the invisible 
## char back to spaces
cure_file () {
    sed -i '' "s/$INVISIBLE_CHAR/$SPACE_CHAR/g" $1
}


ACTION=$1
FILE=$2


validate_input $ACTION $FILE

if [[ $ACTION = "sting" ]] ; then

    # Pranking the same file twice won't work
    # So cure it before applying the sting
    cure_file $FILE
    sting_file $FILE

    echo "Successfuly stinged '$FILE'"

elif [[ $ACTION = "cure" ]]; then
    cure_file $FILE

    echo "Sting has been cured '$FILE'"
fi