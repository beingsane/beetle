#!/usr/bin/env bash

if [[ $# != 2 ]] ; then
    >&2 echo -e "Usage: $0 <action> <sourcecode-file>\nPrank Example: $0 prank controller.js\nFix Example: $0 fix controller.js"
    exit 1
fi

## Case in-sensitive comparison
shopt -s nocasematch


SPACE_CHAR=' '
INVISIBLE_CHAR='‌‌ '

## Validates the input
validate_input () {

    if [[ "$1" != "prank" ]] && [[ "$1" != "fix" ]] ; then
        >&2 echo -e "Invalid action \"$1\". Allowed actions are \"prank\" and \"fix\""
        exit 1
    fi

    if [[ ! -f "$2" ]] ; then    
        >&2 echo -e "File \"$2\" not found"
        exit 1
    fi
}

## Applies the prank on file i.e replaces the spaces
## available in file with invisible char
prank_file () {
    sed -i -e "s/$SPACE_CHAR/$INVISIBLE_CHAR/g" $1
}

## Fixes the file i.e. replaces the invisible 
## char back to spaces
fix_file () {
    sed -i -e "s/$INVISIBLE_CHAR/$SPACE_CHAR/g" $1
}


ACTION=$1
FILE=$2


validate_input $ACTION $FILE

if [[ $ACTION = "prank" ]] ; then
    
    # Pranking the same file twice won't work
    # So fix it before applying the prank
    fix_file $FILE
    prank_file $FILE

elif [[ $ACTION = "fix" ]]; then
    fix_file $FILE
fi